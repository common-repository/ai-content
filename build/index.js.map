{"version":3,"file":"index.js","mappings":"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","sources":["webpack://textprompter/external window [\"wp\",\"blockEditor\"]","webpack://textprompter/external window [\"wp\",\"components\"]","webpack://textprompter/external window [\"wp\",\"compose\"]","webpack://textprompter/external window [\"wp\",\"element\"]","webpack://textprompter/external window [\"wp\",\"hooks\"]","webpack://textprompter/webpack/bootstrap","webpack://textprompter/webpack/runtime/compat get default export","webpack://textprompter/webpack/runtime/define property getters","webpack://textprompter/webpack/runtime/hasOwnProperty shorthand","webpack://textprompter/webpack/runtime/make namespace object","webpack://textprompter/./src/index.js"],"sourcesContent":["module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"compose\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"hooks\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * This code adds AI content generation feature in WordPress.\n * @version 1.0.0\n */\n\n// use strict mode for improved security and error handling\n\"use strict\";\n\n// import necessary functions and components from WordPress libraries\nimport { addFilter } from \"@wordpress/hooks\";\nimport { compose, createHigherOrderComponent } from \"@wordpress/compose\";\nimport { Fragment, useState } from \"@wordpress/element\";\nimport {\n  PanelBody,\n  ToggleControl,\n  SelectControl,\n  Button,\n  RadioControl,\n} from \"@wordpress/components\";\nimport { InspectorControls } from \"@wordpress/blockEditor\";\n\n // create a higher order component that adds the AI content generation feature to the BlockEdit component \nconst wpaikitControls = createHigherOrderComponent((BlockEdit) => {\n  // return a function that takes in props and returns the wrapped BlockEdit component\n  return (props) => {\n    // destructure necessary props and state variables\n    const { attributes, setAttributes, isSelected } = props;\n    const [isRunning, setIsRunning] = useState(false);\n    const [aiElementType, setAiElementType] = useState(\"paragraph\");\n    const [aiBlockAction, setAiBlockAction] = useState(\"create\");\n    const [aiTask, setAiTask] = useState(Object.keys(aicontent.prompts)[0]);\n\n    // define an array of allowed block types\n    const allowedTags = [\n      \"core/quote\",\n      \"core/heading\",\n      \"core/paragraph\",\n      \"core/preformatted\",\n      \"core/pullquote\",\n      \"core/verse\",\n      \"core/list\"\n    ];\n    \n    /**\n     * A function that prepares content for insertion or update based on selected block and settings.\n     * @param {*} content - The generated AI content.\n     * @param {string} aiElementType - The AI element type to insert.\n     * @param {string} aiBlockAction - The AI block action to perform, create or update.\n     * return The created or updated block.\n     */\n    const prepareContent = (\n      content,\n      aiElementType = \"paragraph\",\n      aiBlockAction = \"create\"\n    ) => {\n      // get the client ID of the selected block\n      const selectedBlockClientIds = wp.data\n        .select(\"core/block-editor\")\n        .getSelectedBlockClientId();\n      // get the index of the selected block\n      const indexToInsertAt =\n        wp.data\n          .select(\"core/block-editor\")\n          .getBlockIndex(selectedBlockClientIds) + 1;\n      // determine the block type based on selected element type\n      let blockType;\n      switch (aiElementType) {\n        case \"heading\":\n          blockType = \"core/heading\";\n          break;\n        default:\n          blockType = \"core/paragraph\";\n      }\n      let blockToInsert;\n      // if updating an existing block, update the attributes\n      if (aiBlockAction === \"update\") {\n        const currentBlock = wp.data\n          .select(\"core/block-editor\")\n          .getSelectedBlock();\n        if (currentBlock) {\n          wp.data\n            .dispatch(\"core/block-editor\")\n            .updateBlockAttributes(selectedBlockClientIds, {\n              content: content,\n            });\n        }\n      } else {\n        // if creating a new block, create a new block object and insert it at the selected index\n        \n        blockToInsert = wp.blocks.createBlock(blockType, { content: content });\n        \n        wp.data\n          .dispatch(\"core/block-editor\")\n          .insertBlock(blockToInsert, indexToInsertAt);\n      }\n    };\n\n    const handleClick = (event) => {\n      setIsRunning(true);\n      const nonce = aicontent.nonce;\n      const rest_nonce = aicontent.rest_nonce;\n\n      let text = \"\";\n      if (\"content\" in attributes) {\n        text = attributes.content;\n      } else if (\"citation\" in attributes) {\n        text = attributes.citation;\n      } else if (\"value\" in attributes) {\n        text = attributes.value;\n      } else if (\"values\" in attributes) {\n        text = attributes.values;\n      } else if (\"text\" in attributes) {\n        text = attributes.text;\n      }\n\n      const response = fetch(aicontent.siteUrl + \"/wp-json/aicontent/v1/text\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"X-WP-Nonce\": rest_nonce,\n        },\n        body: JSON.stringify({\n          text: text,\n          type: aiTask,\n        }),\n      })\n        .then(function (response) {\n          // The response is a Response instance.\n          // You parse the data into a useable format using `.json()`\n          return response.json();\n        })\n        .then(function (data) {\n          // `data` is the parsed version of the JSON returned from the above endpoint.\n          if (\n            typeof data.message != undefined &&\n            typeof data.message != undefined\n          ) {\n            var newContent = data.message;\n            prepareContent(newContent, aiElementType, aiBlockAction);\n          }\n          setIsRunning(false);\n        });\n    };\n\n    // create an array of options for the select control based on the prompts defined in aicontent\n    const promptOptions = Object.entries(aicontent.prompts).map(\n      ([key, value]) => ({ label: value, value: key })\n    );\n\n    return (\n      <Fragment>\n        <BlockEdit {...props} />\n        {isSelected && allowedTags.includes(props.name) && (\n          <InspectorControls>\n            <PanelBody title={wp.i18n.__(\"Text Prompter\", \"wp-ai-kit\")}>\n              <SelectControl\n                label={wp.i18n.__(\"Choose Prompt\", \"wp-ai-kit\")}\n                value={aiTask}\n                options={promptOptions}\n                onChange={(newAiTask) => setAiTask(newAiTask)}\n              />\n              <SelectControl\n                label={wp.i18n.__(\"Choose Element Type\", \"wp-ai-kit\")}\n                value={aiElementType}\n                options={[\n                  { label: \"Paragraph\", value: \"paragraph\" },\n                  { label: \"Heading\", value: \"heading\" },\n                ]}\n                onChange={(newAiElementType) =>\n                  setAiElementType(newAiElementType)\n                }\n              />\n              <RadioControl\n                label={wp.i18n.__(\"Choose Block Action\", \"wp-ai-kit\")}\n                selected={aiBlockAction}\n                options={[\n                  { label: \"Update Existing Block\", value: \"update\" },\n                  { label: \"Create New Block\", value: \"create\" },\n                ]}\n                onChange={(newAiBlockAction) =>\n                  setAiBlockAction(newAiBlockAction)\n                }\n              />\n              <Button\n                isBusy={isRunning}\n                disabled={isRunning}\n                variant=\"primary\"\n                onClick={handleClick}\n              >\n                {wp.i18n.__(\"Submit\", \"wp-ai-kit\")}\n              </Button>\n            </PanelBody>\n          </InspectorControls>\n        )}\n      </Fragment>\n    );\n  };\n}, \"wpaikitControls\");\n\n// add the AI content generation feature in WordPress\naddFilter(\"editor.BlockEdit\", \"wpaikit/wp-aikit-controls\", wpaikitControls);"],"names":["addFilter","compose","createHigherOrderComponent","Fragment","useState","PanelBody","ToggleControl","SelectControl","Button","RadioControl","InspectorControls","wpaikitControls","BlockEdit","props","attributes","setAttributes","isSelected","isRunning","setIsRunning","aiElementType","setAiElementType","aiBlockAction","setAiBlockAction","aiTask","setAiTask","Object","keys","aicontent","prompts","allowedTags","prepareContent","content","selectedBlockClientIds","wp","data","select","getSelectedBlockClientId","indexToInsertAt","getBlockIndex","blockType","blockToInsert","currentBlock","getSelectedBlock","dispatch","updateBlockAttributes","blocks","createBlock","insertBlock","handleClick","event","nonce","rest_nonce","text","citation","value","values","response","fetch","siteUrl","method","headers","body","JSON","stringify","type","then","json","message","undefined","newContent","promptOptions","entries","map","key","label","includes","name","i18n","__","newAiTask","newAiElementType","newAiBlockAction"],"sourceRoot":""}